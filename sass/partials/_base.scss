* {
	@include box-sizing(border-box);
}

img {
    max-width: 100%;
    height: auto;
    }

// Center Mixin

@mixin center($axis: "both"){
    position:absolute;
    @if $axis == "y"{
        top:50%;
        -webkit-transform: translateY(-50%);
        -moz-transform: translateY(-50%);
        -ms-transform: translateY(-50%);
        -o-transform: translateY(-50%);
        transform: translateY(-50%);
    }
    @if $axis == "x"{
        left:50%;
        -webkit-transform: translateX(-50%);
        -moz-transform: translateX(-50%);
        -ms-transform: translateX(-50%);
        -o-transform: translateX(-50%);
        transform: translateX(-50%);
    }
    @if $axis == "both"{
        top:50%;
        left:50%;
        -webkit-transform: translate(-50%, -50%);
        -moz-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
        -o-transform: translate(-50%, -50%);
        transform: translate(-50%, -50%);
    }

}

// Transition Mixin
$seconds: 0.3s;
@mixin brandtransition($seconds){
	@include single-transition(all, $seconds, ease);
}

// InContent Mixins

// Global Mixins for CSS3 prefix
@mixin prefix($prop, $val){
    @each $prefix in -webkit-, -moz-, -o-, -ms-, ''{
        #{$prefix}#{$prop}: $val;
    }
}

// Clearfix
@mixin clearfix{
    &:before,
    &:after{
        content:'';
        display: table;
        clear: both;
    }
}

// Opacity
@mixin transparency($opacity){
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=($opacity * 100))";
    filter: alpha(opacity=($opacity * 100));
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    opacity: $opacity;
}